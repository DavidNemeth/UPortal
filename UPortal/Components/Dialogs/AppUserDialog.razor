@using UPortal.Dtos
@using System.ComponentModel.DataAnnotations
@implements IDialogContentComponent<UpdateAppUserDto>

<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.Person())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<FluentDialogBody>
    <EditForm EditContext="@_editContext">
        <DataAnnotationsValidator />
        <FluentStack Orientation="Orientation.Horizontal">
            <FluentSwitch Name="Active" @bind-Value="@Content.IsActive" Label="Active">
            </FluentSwitch>
            <FluentSwitch Name="Admin" @bind-Value="@Content.IsAdmin" Label="Admin">
            </FluentSwitch>
        </FluentStack>
    </EditForm>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">
        Cancel
    </FluentButton>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync" Disabled="@(!_editContext.Validate())">
        Save
    </FluentButton>
</FluentDialogFooter>

@code {
    private EditContext _editContext = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    [Parameter]
    public UpdateAppUserDto Content { get; set; } = default!;

    [Parameter]
    public string UserName { get; set; } = string.Empty;

    [Parameter]
    public string AzureAdObjectId { get; set; } = string.Empty;


    protected override void OnInitialized()
    {
        _editContext = new EditContext(Content);
    }

    private async Task SaveAsync()
    {
        if (_editContext.Validate())
        {
            await Dialog.CloseAsync(Content);
        }
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}